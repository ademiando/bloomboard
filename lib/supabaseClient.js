import { createClient } from "@supabase/supabase-js";
export const supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY, { auth: { persistSession:false } });
export async function loadPortfolio(deviceId){ const { data, error } = await supabase.from('portfolios').select('id,data').eq('device_id', deviceId).order('updated_at',{ascending:false}).limit(1); if(error) throw error; if(data && data.length) return { rowId: data[0].id, data: data[0].data }; return { rowId: null, data: [] }; }
export async function savePortfolio(deviceId, portfolio, rowId=null){ const payload = { device_id: deviceId, data: portfolio }; if(rowId){ const { data, error } = await supabase.from('portfolios').update(payload).eq('id', rowId).select('id').single(); if(error) throw error; return data.id; } else { const { data, error } = await supabase.from('portfolios').insert(payload).select('id').single(); if(error) throw error; return data.id; } }
